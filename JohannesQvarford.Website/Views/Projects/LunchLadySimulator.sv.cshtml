@using System.Reflection.Emit
@{
    Layout = "~/Views/Shared/_Project.sv.cshtml";
}

@section Styles {
    @Styles.Render("~/Content/lunch-lady-simulator")
}

<div class="project">
    <h1>Lunch Lady Simulator</h1>
    <img class="project-image" src="~/Content/Images/LunchLadySimulatorBig.jpg" />
    <div class="project-summary">
        <div class="project-summary-language">Språk: C#</div>
        <div class="project-summary-period">År: 2014</div>
        <div class="project-summary-group">Institution: HiS</div>
    </div>

    <h2>Introduktion</h2>
	<p>
		Lunch Lady Simulator är ett <strong>komiskt fysikbaserat simulatorspel</strong> där spelaren tar på sig rollen som mattant.
		Målet med spelet är att servera så många kunder som möjligt medan man slåss mot de
		<strong>svårhanterliga men ändå underhållande kontrollerna</strong>. Spelet tar mycket inspiration från Surgeon Simulator.
	</p>
	<p>
		Spelet innehåller en rad olika fysikbaserade ingredienser och verktyg, <strong>FMOD</strong> integrerad musik,
		röstskådespelad dialog och autogenererade kunder.
	</p>
	<p>
		Ett demo av spelet blev klart i juni 2014, och källkoden finns tillgänglig på <a href="https://github.com/johannes-qvarford/LunchLadySimulator">Github</a>.
		Lunch Lady Simulator är en del av <a href="http://democreativity.com/games">Democreativity</a> projektet, vars syfte är att uppmuntra kreativt spelutvecklande.
		Projectet utvecklades under <a href="http://www.his.se/om-oss/Utbildningar-och-amnen/Data-och-IT/Microsoft-Game-Camp-2014/">Microsoft Game Camp 2014</a>
		vilket var en stor möjlighet för spelutvecklare att utveckla mot olika Microsoft apparater.
		Det finns en <a href="https://www.youtube.com/watch?v=TV94WJM8CO0">genomspelning</a> tillgängligt av demot, spelat av youtuber:n DualDGaming.
	</p>

	<p>
		Detta projekt var <strong>problematiskt</strong> från stund till stund, och jag blev tvungen att dela med mig av rollen som lead programmerare under projektet.
		Som lead var det min uppgift att organisera de andra programmerarna och kommunicera med de andra leads:en.
		Jag var även ansvarig för att hantera inmatningssystemet, armfysiken och soppfysiken.
	</p>

    <h2>Som en programmerare</h2>
	<p>
		Jag blev tilldelad att utveckla de stora <strong>fysiska delarna</strong> av spelet. Vi använde <strong>Unity</strong>, vilket tog hand om en del av arbetet,
		och tillät mig att utvärdera <strong>olika strategier</strong> från en <strong>högre abstraktionsnivå</strong>. Trots att det normalt sätt hade varit en bra
		idé att låta en designer binda ihop ett antal fysiska komponenter, så krävde de höga kraven av designen att <strong>armarna behövde handkodas</strong>.
		Till exempel: armarna är så tunga att de (och de föremål som de må hålla) aldrig bör knuffas av någonting.
		Samtidigt så borde armarna inte knuffa ingredienser alltför långt iväg när de vidrörs, vilket innebar att armarna båda hade
		en hög massa (knuffas inte av något) och en låg massa (knuffa inte för hårt) samtidigt.
	</p>
	<p>
		Lunch Lady Simulator hade <strong>flera olika kontrollscheman</strong> under utvecklingen som behövde testas och integreras in i spelet.
		Det fanns ett kontrollschema för tangentbordet, ett för handkontroll med en spelare, ett för tvåmannalag med varsin kontroll och ett för <strong>kinect</strong>.
		Trots att kinect support hanterades av en annan programmerare så var det svårt att hantera all dessa olika kontrollscheman på grund av
		begränsningar i Unity. För att undersöka om spelaren t.ex. flyttar sin hand framåt, så var man tvungen att <strong>dynamiskt konstruera en sträng</strong> som specificerade
		kontrollschemat och handlingen, och sedan kolla om tangenten var nere (om tangentbordet användes) eller om avtryckaren är tillräckligt avtryckt (om kontroller användes).
		Givet att det var ett välkänt problem med Unity så fanns det <strong>antaglingen en resurs tillgänglig på Asset Store</strong> som kunde ha
		hjälpt oss, men vi utvecklade på en <strong>nollkronersbudget</strong> utan lön, och det vore inte rättvist mot de andra lagen att få en sådan fördel genom monetära medel.
	</p>

    <h2>Som en ledare</h2>
	<p>
		I början av projektet hade jag höga förhoppningar. Jag kunde <strong>tilldela stora uppgifter</strong> till de andra programmerarna och det verkade som of alla
		skulle bli upptagna ett tag framöver. <strong>Jag hade tråkigt nog fel</strong>, och insåg snart att programmeraren som ansvarade för vattenfysiken
		inte hade möjlighet att fortsätta utvecklingen, delvis på grund av begränsningar i Unity och prestandakrav.
		Sammtidigt så var jag <strong>för upptagen med armfysiken för att hantera team:et</strong> och medan vi alla utvecklade våra delar av spelet
		så hade vi inte sammanfört vårt arbete vid vecka 4. Det var då som en annan programmerare steg in för att <strong>ta på sig ledarskapet över programmerarna</strong>
		för tillfället.
	</p>
	<p>
		Senare i projektet så var han ofta upptagen med att implementera kinect stöd (utvecklingskitten fanns i en annan byggnad) så jag behövde ta över för honom.
		Vid slutet av projektet så var jag fullt återhämtad och <strong>tillbaka i rollen som lead programmerare</strong>, trots att det inte var explicit tillgännagivet förrän efter projektet var slut.
	</p>
	<p>
		För att vara ärlig så var jag väldigt <strong>stressad under projektets gång</strong>. Jag hade just gått med i <strong>Savvy Solutions Skövde AB</strong> och arbetade där på min fritid.
		Eftersom jag arbetade på projektet 40 timmar i veckan och jag arbetade på Savvy 20 timmar i veckan så hade jag <strong>inte en dag ledigt i veckan</strong>
		för att slappna av. Jag borde antagligen inte ha hanterat fysiken och tagit på mig ledarrollen samtidigt eftersom <strong>fysiken tog för mycket av min tid</strong>,
		vilket jag borde ha använt för att hantera de andra programmerarna. Det kändes bara för tillfället att fysiken var den svåraste och mest tidskonsumerande
		uppgiften och att <strong>vi inte skulle blivit klara i tid med ett bra resultat om någon av de andra programmerarna hanterade det</strong>.
		Jag skulle inte ha axlat så mycket och accepterat att jag <strong>inte kunde värdera projektet över mitt välbefinnande</strong>.
	</p>

    <h2>Sammanfattning</h2>
	<p>
		Trots hinder på vägen så avslutades projetet i tid och gav en <strong>stor publik</strong> som verkligen uppskattade det, speciellt sammarbetsläget.
		Jag lärde mig en hel del av Unitys egenskaper och begränsningar samt många fysikmotorkoncept.
		Genom projektet insåg jag att jag <strong>inte kunde göra allting</strong> och vara alla till lags. Jag hade satt mitt välbefinnande i andra rummet, vilket jag inte får göra igen.
		Nuförtiden gör jag <strong>aldrig tunga crunches under längre tidsperioder</strong>, för att jag vet att de kan ha en hemsk effekt.
	</p>
</div>
